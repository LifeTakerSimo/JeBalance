// <auto-generated />
using System;
using JeBalance.SQLLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JeBalance.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231222145652_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("JeBalance.SQLLite.Model.AdminSQLS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("person_id");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("ADMIN", (string)null);
                });

            modelBuilder.Entity("JeBalance.SQLLite.Model.CalomniateurSQLS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("person_id");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("CALOMNIATEUR", (string)null);
                });

            modelBuilder.Entity("JeBalance.SQLLite.Model.DenonciationSQLS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("EvasionCountry")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("evasion_country");

                    b.Property<int>("InformantId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Offense")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("offense");

                    b.Property<int>("SuspectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("InformantId");

                    b.HasIndex("SuspectId");

                    b.ToTable("DENONCIATION", (string)null);
                });

            modelBuilder.Entity("JeBalance.SQLLite.Model.PersonSQLS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("city_name");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsVIP")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_vip");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("postal_code");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT")
                        .HasColumnName("street_name");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("street_number");

                    b.HasKey("Id");

                    b.ToTable("PERSON", (string)null);
                });

            modelBuilder.Entity("JeBalance.SQLLite.Model.ResponseSQLS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT")
                        .HasColumnName("amount");

                    b.Property<int?>("DenonciationId")
                        .IsRequired()
                        .HasColumnType("INTEGER")
                        .HasColumnName("denonciation_id");

                    b.Property<string>("ResponseType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("response_type");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("DenonciationId");

                    b.ToTable("RESPONSE", (string)null);
                });

            modelBuilder.Entity("JeBalance.SQLLite.Model.AdminSQLS", b =>
                {
                    b.HasOne("JeBalance.SQLLite.Model.PersonSQLS", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("JeBalance.SQLLite.Model.CalomniateurSQLS", b =>
                {
                    b.HasOne("JeBalance.SQLLite.Model.PersonSQLS", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("JeBalance.SQLLite.Model.DenonciationSQLS", b =>
                {
                    b.HasOne("JeBalance.SQLLite.Model.PersonSQLS", "Informant")
                        .WithMany()
                        .HasForeignKey("InformantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeBalance.SQLLite.Model.PersonSQLS", "Suspect")
                        .WithMany()
                        .HasForeignKey("SuspectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Informant");

                    b.Navigation("Suspect");
                });

            modelBuilder.Entity("JeBalance.SQLLite.Model.ResponseSQLS", b =>
                {
                    b.HasOne("JeBalance.SQLLite.Model.DenonciationSQLS", "Denonciation")
                        .WithMany()
                        .HasForeignKey("DenonciationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Denonciation");
                });
#pragma warning restore 612, 618
        }
    }
}
